# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: record_transcriber.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'record_transcriber.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18record_transcriber.proto\x12\x12record_transcriber\"\x07\n\x05\x45mpty\"h\n\x1bRecordAndTranscribeResponse\x12\x18\n\x10transcribed_text\x18\x01 \x01(\t\x12\x18\n\x10\x63onfidence_score\x18\x02 \x01(\x02\x12\x15\n\rerror_message\x18\x03 \x01(\t2x\n\x11RecordTranscriber\x12\x63\n\x13RecordAndTranscribe\x12\x19.record_transcriber.Empty\x1a/.record_transcriber.RecordAndTranscribeResponse\"\x00\x42?\n\x1e\x63om.example.record_transcriberB\x16RecordTranscriberProtoP\x01\xa2\x02\x02RTb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'record_transcriber_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\036com.example.record_transcriberB\026RecordTranscriberProtoP\001\242\002\002RT'
  _globals['_EMPTY']._serialized_start=48
  _globals['_EMPTY']._serialized_end=55
  _globals['_RECORDANDTRANSCRIBERESPONSE']._serialized_start=57
  _globals['_RECORDANDTRANSCRIBERESPONSE']._serialized_end=161
  _globals['_RECORDTRANSCRIBER']._serialized_start=163
  _globals['_RECORDTRANSCRIBER']._serialized_end=283
# @@protoc_insertion_point(module_scope)
